/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode fast = head;
        ListNode slow = head;
        if(n == 1){
            if(slow.next == null){
                return null;
            }
            while(slow.next.next!=null){
                slow = slow.next;   //就是这里：十分重要！！！！！！
            }
            slow.next = null;
        }
        else {
            for(int i = 1; i < n; i++){
                fast = fast.next;
            }
            while(fast.next != null){
                slow = slow.next;
                fast = fast.next;
            }
            if(slow.next != null){
                if(slow.next != null ){
                    slow.val = slow.next.val;
                    slow.next = slow.next.next;
                }
                else{
                    slow.val = slow.next.val;
                    slow.next = null;
                }
            }
            else{
                slow = null;
            }

        }
        return head;
    }
}
